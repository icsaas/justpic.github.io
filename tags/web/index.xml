<html><body><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>web on 桑河一榆</title><link/>https://justpic.org/tags/web/<description>Recent content in web on 桑河一榆</description><generator>justpic</generator><language>zh-CN</language><managingeditor>matrix.orz@gmail.com (justpic)</managingeditor><webmaster>matrix.orz@gmail.com (justpic)</webmaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastbuilddate>Thu, 08 Sep 2016 00:00:00 +0000</lastbuilddate><atom:link href="https://justpic.org/tags/web/index.xml" rel="self" type="application/rss+xml"></atom:link><item><title>tornado 国际化实践</title><link/>https://justpic.org/post/2014/04/27/tornado-%E5%9B%BD%E9%99%85%E5%8C%96%E5%AE%9E%E8%B7%B5/<pubdate>Sun, 27 Apr 2014 00:00:00 +0000</pubdate><author>matrix.orz@gmail.com (justpic)</author><guid>https://justpic.org/post/2014/04/27/tornado-%E5%9B%BD%E9%99%85%E5%8C%96%E5%AE%9E%E8%B7%B5/</guid><description><p>tornado i18n国际化</p><blockquote><p>i18n是国际化的简称（Internationalization,去掉开始的I和最后的N，中间一共18个字符）。
tornado中使用i18n,需要下面两个工具(pygettext,msgfmt)和两个相关文件（po文件和mo文件）</p></blockquote><h3 id="pygetext和msgfmt的使用方法">pygetext和msgfmt的使用方法</h3><ol><li><p>编写python代码文件 test.py</p><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span><span class="lnt">2</span><span class="lnt">3</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span><span class="nn">gettext</span><span class="kn">import</span><span class="n">gettext</span><span class="k">as</span><span class="n">_</span><span class="k">print</span><span class="n">_</span><span class="p">(</span><span class="s2">"well down"</span><span class="p">)</span><span class="k">print</span><span class="n">_</span><span class="p">(</span><span class="s2">"good"</span><span class="p">)</span></code></pre></td></tr></table></div></div></li><li><p>运行以下命令</p><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-shell" data-lang="shell">pygetext test.py</code></pre></td></tr></table></div></div></li><li><p>生成messages.pot文件,更改文件后缀</p><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-fallback" data-lang="fallback">mv messages.pot messages.po</code></pre></td></tr></table></div></div></li><li><p>配置msgstr值<br/>
生成一个名为messages.mo文件：</p><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span><span class="lnt">2</span><span class="lnt">3</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-shell" data-lang="shell">msgfmt messages.po<span class="c1">#建立目录locale/cn/LC_MESSAGES/</span>
mv messages.po locale/cn/LC_MESSAGES</code></pre></td></tr></table></div></div><p>cn目录是所对应的语言，LC_MESSAGES是gettext.py文件里要求的
mo文件必须和所定义的域同名
gettext.py中有
modfile=os.path.join(localedir,lang,‘LC_MESSAGES’,'%s.mo’ %domain)</p><p>测试：</p><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span><span class="lnt">2</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-shell" data-lang="shell"><span class="nv">$python</span>
&gt;&gt;&gt;gettext.install<span class="o">(</span><span class="s1">'messages'</span>,<span class="s1">'./locale'</span>,unicode<span class="o">=</span>True<span class="o">)</span></code></pre></td></tr></table></div></div><p>三个参数：</p><ul><li>作用域名:用于限定翻译文件的主名</li><li>路径:存放翻译文件的路径</li><li>unicode:是否使用unicode（如果应用程序是unicode的，此处应设为True)</li></ul><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span><span class="lnt">2</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span><span class="n">gettext</span><span class="o">.</span><span class="n">translation</span><span class="p">(</span><span class="s1">'messages'</span><span class="p">,</span><span class="s1">'./locale'</span><span class="p">,</span><span class="n">languages</span><span class="o">=</span><span class="p">[</span><span class="s1">'cn'</span><span class="p">])</span><span class="o">.</span><span class="n">install</span><span class="p">(</span><span class="bp">True</span><span class="p">)</span><span class="o">&gt;&gt;&gt;</span><span class="k">print</span><span class="n">_</span><span class="p">(</span><span class="s2">"good"</span><span class="p">)</span></code></pre></td></tr></table></div></div></li></ol><h3 id="tornado中的应用">tornado中的应用</h3><ol><li>运行以下命令<div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-shell" data-lang="shell"><span class="nv">$xgettext</span> -L python -k<span class="o">=</span>_ -o openquant.po<span class="k">$(</span>find . -name<span class="se">\*</span>.py<span class="k">)</span><span class="k">$(</span>find template/ -name<span class="se">\*</span>.html<span class="k">)</span></code></pre></td></tr></table></div></div></li><li>查找所有需要翻译的相关项生成 po 文件<div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-shell" data-lang="shell"><span class="nv">$msgfmt</span> openquant.po -o locale/zh_CN/LC_MESSAGES/openquant.mo</code></pre></td></tr></table></div></div></li></ol><p>完成mo文件的生成<br/>
4. 完成相关文件的生成后，需要在代码中加载:<code>tornado.locale.load_gettext_translations(options.I18N_PATH,"openquant")</code>
5. handler中自定义get_user_locale函数：
```
def get_user_locale(self):
#zh_CN or en_US
user_locale = self.get_cookie(“user_locale”)</p><pre><code> if user_locale:
return tornado.locale.get(user_locale)
return None
```</code></pre><hr/><p><em>参考</em></p><ul><li><a href="http://www.ylinux.org/imind/167" rel="noopener noreffer" target="_blank">iMind</a></li><li><a href="http://justbm.blogspot.com/2014/01/django.html" rel="noopener noreffer" target="_blank">django多国语言</a></li></ul></description></item></channel></rss></body></html>