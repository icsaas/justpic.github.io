<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>低代码 on 桑河一榆</title><link>https://justpic.org/tags/%E4%BD%8E%E4%BB%A3%E7%A0%81/</link><description>Recent content in 低代码 on 桑河一榆</description><generator>justpic</generator><language>zh-CN</language><managingEditor>matrix.orz@gmail.com (justpic)</managingEditor><webMaster>matrix.orz@gmail.com (justpic)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 02 Mar 2020 10:20:38 +0800</lastBuildDate><atom:link href="https://justpic.org/tags/%E4%BD%8E%E4%BB%A3%E7%A0%81/index.xml" rel="self" type="application/rss+xml"/><item><title>浅谈低代码开发</title><link>https://justpic.org/post/2020/03/02/lowcode-thoughts/</link><pubDate>Mon, 02 Mar 2020 10:20:38 +0800</pubDate><author>matrix.orz@gmail.com (justpic)</author><guid>https://justpic.org/post/2020/03/02/lowcode-thoughts/</guid><description><p>本文从低代码发展历史、 相关领域发展情况、以及具体的实现三个方面对低代码的前世今生进行探索。</p><h2 id="低代码发展历史">低代码发展历史</h2><blockquote><p>技术可能是一个革命自我的过程</p></blockquote><p>低代码开发平台的术语虽然2014年才被Forrester Research正式提出，但最早的产品雏形可追溯到2001年所建立的OutSystems中。</p><p><strong>低代码出现的时机和原因</strong></p><ol><li>软件定义概念的兴起（Software define anything）</li><li>高效协同工作的要求<br>
减低信息化活动的技术门槛，让更多的人参与到信息化活动中来，屏蔽复杂的软件设计、编码、测试等比较专业的软件工程过程，使编程工作更好承接业务本身，敏捷精益化。</li><li>政策推动的需要</li><li>软件产品的迭代进化</li><li>技术自我革命</li></ol><p><strong>低代码市场发展情况</strong><br>
根据2018年以来的投融资情况，低代码开发产品市场主要集中在<a href="" rel="noopener noreffer">OutSystems</a>
、<a href="" rel="noopener noreffer">Mendix</a>
、<a href="" rel="noopener noreffer">搭搭云</a>
、<a href="" rel="noopener noreffer">奥哲网络</a>
、<a href="" rel="noopener noreffer">轻流</a>
、<a href="" rel="noopener noreffer">magic</a>
、<a href="" rel="noopener noreffer">黑帕云</a>
、<a href="" rel="noopener noreffer">ClickPaas</a>
和<a href="" rel="noopener noreffer">数式科技</a>
，其中部分初创企业最高已获得亿级美元融资，成功跻身独角兽。</p><p><strong>低代码热度和趋势</strong></p><p>为了更直观地体会低代码的热度，运用百度指数、头条指数、Google Trends等工具查看低代码的热度和趋势。</p><ol><li><p>百度指数上对低代码的搜索情况如下：<br><img class="lazyload" src="/svg/loading.small.min.svg" data-sizes="auto" data-srcset="https://cdn.jsdelivr.net/gh/justpic/jscdn/post/bdindex_lowcode.png,  1.5x,  2x" data-src="" alt="低代码" title="低代码"/><br>
图中显示在今年3月份低代码一词热度最高，获得越来越多的关注。</p></li><li><p>Google Trends上对lowcode、DDD、DSL、BPM的搜索情况如图：<br><img class="lazyload" src="/svg/loading.small.min.svg" data-sizes="auto" data-srcset="https://cdn.jsdelivr.net/gh/justpic/jscdn/post/gindex_lowcode.PNG,  1.5x,  2x" data-src="" alt="google lowcode" title="google lowcode"/><br>
对于低代码（lowcode），google trends并没有显示其获得特别多的关注和热度，但其相关技术：cloud与DSL呈现强烈的负相关关系</p></li></ol><h2 id="相关领域发展情况">相关领域发展情况</h2><p>低代码概念作为高度集成的企业信息化解决方案和产品，其相关领域可大致分为OA协同办公、人工智能、中台技术、云开发四大部分。</p><ol><li>OA协同办公软件<ul><li>办公自动化（OA）软件发展历史可追溯到office办公软件，随着Web技术的发展，通过网络技术高度集成相关软件，提高了办公软件的自动化程度。</li><li>随着低代码技术的快速发展，OA协同办公软件将迎来重大升级，OA协同办公软件将集成业务建模和仿真这一特性，为业务信息化落地提速增效。</li></ul></li><li>人工智能<ul><li>人工智能的加持，快速为业务链赋能：人脸识别、自然语言技术作为末端替代人工操作进一步提高工作效率。</li><li>数据分析可以进一步分析流程相关时间序列相关数据，迭代优化相关业务。</li></ul></li><li>中台技术的发展<ul><li>中台技术提供更为灵活的API管理和应用。</li></ul></li><li>云开发环境。<ul><li>云原生技术的发展将灵活高效地承载低代码业务开发模式。</li></ul></li></ol><h2 id="具体实现">具体实现</h2><p>从低代码说开去,低代码、中台、RPA、人工智能这些概念词更像是为了迎合市场准备的营销素材，从技术实现角度，可能更为关注低代码实现的技术实现细节。<br><strong>技术实现要点</strong><br>
低代码的技术实现要点主要可以分为云原生、Devops、BPM、DSL、前端可视化等方面。</p><ol><li>云原生<ul><li>云原生为低代码提供基础的软件实施工具，软件云化不仅可以统一管理应用，也提高了基础资源的利用率。</li></ul></li><li>Devops<ul><li>Devops有效为低代码提供持续有效的软件产品构建流程，一方面是软件工程理论的实践，好的DevOps是一套有效运营流程规范。</li></ul></li><li>BPM<ul><li>BPM技术的发展与协同办公软件开发技术发展紧密，activiti、camunda、flowable技术作为开源工作流引擎可以作为业务建模的参考实现。</li><li>类BPM技术：数据分析/算法引擎</li></ul></li><li>DSL<ul><li>DSL不仅存在于后台开发技术，而且在前端技术领域也得到越来越多的应用，构建一个好的类型系统可以有效解决复杂业务建模。</li></ul></li><li>前端可视化<ul><li>前端可视化与用户交互紧密联系，友好的可视化交互操作对低代码的推广使用非常重要。</li></ul></li></ol><hr><p><strong>参考</strong><br>
DSL:</p><ul><li><a href="https://www.ituring.com.cn/book/miniarticle/4194" target="_blank" rel="noopener noreffer">选择DSL实现的方式</a></li><li><a href="https://medium.com/@dempfi/typescript-jsx-syntax-as-typed-dsl-97c052b825c8" target="_blank" rel="noopener noreffer">TypeScript JSX syntax as a typed DSL</a></li><li><a href="https://gist.github.com/ulve/26d6087bbab6d9a67c4b6f1a226807ed" target="_blank" rel="noopener noreffer">DSL.ts</a></li></ul><p>DDD:</p><ul><li><a href="https://github.com/madawei2699/ddd_parklot" target="_blank" rel="noopener noreffer">https://github.com/madawei2699/ddd_parklot</a></li></ul><p>低代码：</p><ul><li><a href="https://mp.weixin.qq.com/s/Y23pwX6JmYhME5u52FcLLQ" target="_blank" rel="noopener noreffer">探路中台、RPA、低代码引领企业级IT服务未来式</a></li><li><a href="https://github.com/phodal/lowcode.git" target="_blank" rel="noopener noreffer">https://github.com/phodal/lowcode.git</a></li><li><a href="https://zhuanlan.zhihu.com/p/88616149" target="_blank" rel="noopener noreffer">现代Web开发与未来</a></li><li><a href="https://github.com/phodal/cloud-dev" target="_blank" rel="noopener noreffer">云研发</a></li><li><a href="https://mp.weixin.qq.com/s/ytihMiH1LZ0gkjgKTE8RTA" target="_blank" rel="noopener noreffer">2020年边缘计算为什么会火</a></li><li><a href="https://mp.weixin.qq.com/s/Aq_uRdEbn7sZDSTifgiP9A" target="_blank" rel="noopener noreffer">麻省理工选出的全球十大突破性技术</a></li><li><a href="https://mp.weixin.qq.com/s/dQjViQ5N3hWApH40sfZAuA" target="_blank" rel="noopener noreffer">大中台模式下如何构建复杂业务核心状态机组件</a></li><li><a href="https://zhuanlan.zhihu.com/p/96046788" target="_blank" rel="noopener noreffer">深入typescript类型系统（二）：泛型和类型元编程</a></li><li><a href="https://blog.frankel.ch/builder-pattern-finite-state-machine/" target="_blank" rel="noopener noreffer">builder模式是一个有限状态机</a></li></ul><p>CI/CD:</p><ul><li><a href="https://www.stackbit.com/" target="_blank" rel="noopener noreffer">https://www.stackbit.com/</a></li><li><a href="https://wakatime.com/plugins/status?onboarding=true" target="_blank" rel="noopener noreffer">wakatime</a></li></ul></description></item></channel></rss>