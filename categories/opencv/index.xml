<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>opencv on 桑河一榆</title><link>https://justpic.org/categories/opencv/</link><description>Recent content in opencv on 桑河一榆</description><generator>justpic</generator><language>zh-CN</language><managingEditor>matrix.orz@gmail.com (justpic)</managingEditor><webMaster>matrix.orz@gmail.com (justpic)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 27 Mar 2020 11:47:38 +0800</lastBuildDate><atom:link href="https://justpic.org/categories/opencv/index.xml" rel="self" type="application/rss+xml"/><item><title>ubuntu 18.04系统安装OpenCV 4.2.0</title><link>https://justpic.org/post/2020/03/27/ubuntu-18.04-install-opencv-4.2.0/</link><pubDate>Fri, 27 Mar 2020 11:47:38 +0800</pubDate><author>matrix.orz@gmail.com (justpic)</author><guid>https://justpic.org/post/2020/03/27/ubuntu-18.04-install-opencv-4.2.0/</guid><description><p>主要介绍ubuntu 18.04安装OpenCV 4.2.0</p><h2 id="更新系统">更新系统</h2><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span><span class="lnt">2</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-shell" data-lang="shell">$ sudo apt update
$ sudo apt upgrade</code></pre></td></tr></table></div></div><h2 id="安装前置依赖包">安装前置依赖包</h2><ul><li>通用工具</li></ul><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span><span class="lnt">2</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-shell" data-lang="shell"> $ sudo apt install build-essential cmake pkg-config unzip yasm git checkinstall</code></pre></td></tr></table></div></div><ul><li>图像I/O库　</li></ul><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-shell" data-lang="shell">$ sudo apt install libjpeg-dev libpng-dev libtiff-dev</code></pre></td></tr></table></div></div><ul><li>视频/音频库-FFMPEG,GSTREAMER,x264等等</li></ul><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span><span class="lnt">2</span><span class="lnt">3</span><span class="lnt">4</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-shell" data-lang="shell">$ sudo apt install libavcodec-dev libavformat-dev libswscale-dev libavresample-dev
$ sudo apt install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
$ sudo apt install libxvidcore-dev x264 libx264-dev libfaac-dev libmp3lame-dev libtheora-dev
$ sudo apt install libfaac-dev libmp3lame-dev libvorbis-dev</code></pre></td></tr></table></div></div><ul><li>OpenCore-</li></ul><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span><span class="lnt">2</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-shell" data-lang="shell">$ sudo apt install libopencore-amrnb-dev libopencore-amrwb-dev</code></pre></td></tr></table></div></div><ul><li>照相编程接口库　</li></ul><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span><span class="lnt">2</span><span class="lnt">3</span><span class="lnt">4</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-shell" data-lang="shell">$ sudo apt-get install libdc1394-22 libdc1394-22-dev libxine2-dev libv4l-dev v4l-utils
$<span class="nb">cd</span> /usr/include/linux
$ sudo ln -s -f ../libv4l1-videodev.h videodev.h
$<span class="nb">cd</span> ~</code></pre></td></tr></table></div></div><ul><li>GTK库－图形用户界面</li></ul><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-shell" data-lang="shell">$ sudo apt-get install libgtk-3-dev</code></pre></td></tr></table></div></div><ul><li>python3所使用的库　</li></ul><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span><span class="lnt">2</span><span class="lnt">3</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-shell" data-lang="shell">$ sudo apt-get install python3-dev python3-pip
$ sudo -H pip3 install -U pip numpy
$ sudo apt install python3-testresources</code></pre></td></tr></table></div></div><ul><li>用于CPU的C++并行库</li></ul><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-shell" data-lang="shell">$ sudo apt-get install libtbb-dev</code></pre></td></tr></table></div></div><ul><li>用于OpenCV的优化库　</li></ul><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-shell" data-lang="shell">sudo apt-get install libatlas-base-dev gfortran</code></pre></td></tr></table></div></div><ul><li>可选安装　</li></ul><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span><span class="lnt">2</span><span class="lnt">3</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-shell" data-lang="shell">$ sudo apt-get install libprotobuf-dev protobuf-compiler
$ sudo apt-get install libgoogle-glog-dev libgflags-dev
$ sudo apt-get install libgphoto2-dev libeigen3-dev libhdf5-dev doxygen</code></pre></td></tr></table></div></div><h2 id="正式安装opencv-420步骤">正式安装Opencv 4.2.0步骤</h2><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt"> 1</span><span class="lnt"> 2</span><span class="lnt"> 3</span><span class="lnt"> 4</span><span class="lnt"> 5</span><span class="lnt"> 6</span><span class="lnt"> 7</span><span class="lnt"> 8</span><span class="lnt"> 9</span><span class="lnt">10</span><span class="lnt">11</span><span class="lnt">12</span><span class="lnt">13</span><span class="lnt">14</span><span class="lnt">15</span><span class="lnt">16</span><span class="lnt">17</span><span class="lnt">18</span><span class="lnt">19</span><span class="lnt">20</span><span class="lnt">21</span><span class="lnt">22</span><span class="lnt">23</span><span class="lnt">24</span><span class="lnt">25</span><span class="lnt">26</span><span class="lnt">27</span><span class="lnt">28</span><span class="lnt">29</span><span class="lnt">30</span><span class="lnt">31</span><span class="lnt">32</span><span class="lnt">33</span><span class="lnt">34</span><span class="lnt">35</span><span class="lnt">36</span><span class="lnt">37</span><span class="lnt">38</span><span class="lnt">39</span><span class="lnt">40</span><span class="lnt">41</span><span class="lnt">42</span><span class="lnt">43</span><span class="lnt">44</span><span class="lnt">45</span><span class="lnt">46</span><span class="lnt">47</span><span class="lnt">48</span><span class="lnt">49</span><span class="lnt">50</span><span class="lnt">51</span><span class="lnt">52</span><span class="lnt">53</span><span class="lnt">54</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-shell" data-lang="shell">$<span class="nb">cd</span> ~
$ mkdir -p installcv1
$<span class="nb">cd</span> installcv1
$ wget -O opencv.zip https://github.com/opencv/opencv/archive/4.1.1.zip
$ wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/4.1.1.zip
$ unzip opencv.zip
$ unzip opencv_contrib.zip
$<span class="nb">echo</span><span class="s2">"Create a virtual environtment for the python binding module"</span>
$ sudo pip install virtualenv virtualenvwrapper
$ sudo rm -rf ~/.cache/pip
$<span class="nb">echo</span><span class="s2">"Edit ~/.bashrc"</span>
$<span class="nb">export</span><span class="nv">WORKON_HOME</span><span class="o">=</span><span class="nv">$HOME</span>/.virtualenvs
$<span class="nb">export</span><span class="nv">VIRTUALENVWRAPPER_PYTHON</span><span class="o">=</span>/usr/bin/python3
$<span class="nb">source</span> /usr/local/bin/virtualenvwrapper.sh
$ mkvirtualenv cv -p python3
$ pip install numpy
$<span class="nb">echo</span><span class="s2">"Procced with the installation"</span>
$<span class="nb">cd</span> opencv-4.2.0
$ mkdir build
$<span class="nb">cd</span> build
$ cmake -D<span class="nv">CMAKE_BUILD_TYPE</span><span class="o">=</span>RELEASE
-D<span class="nv">CMAKE_C_COMPILER</span><span class="o">=</span>/usr/bin/gcc
-D<span class="nv">CMAKE_INSTALL_PREFIX</span><span class="o">=</span>/home/<span class="o">{</span>youraccount<span class="o">}</span>/opencv
-D<span class="nv">INSTALL_PYTHON_EXAMPLES</span><span class="o">=</span>ON
-D<span class="nv">INSTALL_C_EXAMPLES</span><span class="o">=</span>OFF
-D<span class="nv">WITH_TBB</span><span class="o">=</span>ON
-D<span class="nv">WITH_CUDA</span><span class="o">=</span>ON
-D<span class="nv">BUILD_opencv_cudacodec</span><span class="o">=</span>OFF
-D<span class="nv">ENABLE_FAST_MATH</span><span class="o">=</span><span class="m">1</span>
-D<span class="nv">CUDA_FAST_MATH</span><span class="o">=</span><span class="m">1</span>
-D<span class="nv">WITH_CUBLAS</span><span class="o">=</span><span class="m">1</span>
-D<span class="nv">WITH_V4L</span><span class="o">=</span>ON
-D<span class="nv">WITH_QT</span><span class="o">=</span>OFF
-D<span class="nv">WITH_OPENGL</span><span class="o">=</span>ON
-D<span class="nv">WITH_GSTREAMER</span><span class="o">=</span>ON
-D<span class="nv">OPENCV_GENERATE_PKGCONFIG</span><span class="o">=</span>ON
-D<span class="nv">OPENCV_PC_FILE_NAME</span><span class="o">=</span>opencv.pc
-D<span class="nv">OPENCV_ENABLE_NONFREE</span><span class="o">=</span>ON
-D<span class="nv">OPENCV_PYTHON3_INSTALL_PATH</span><span class="o">=</span>~/.virtualenvs/cv/lib/python3.6/site-packages
-D<span class="nv">OPENCV_EXTRA_MODULES_PATH</span><span class="o">=</span>~/installcv/opencv_contrib-4.2.0/modules
-D<span class="nv">PYTHON_EXECUTABLE</span><span class="o">=</span>~/.virtualenvs/cv/bin/python
-D<span class="nv">BUILD_EXAMPLES</span><span class="o">=</span>ON　-D<span class="nv">WITH_CUDNN</span><span class="o">=</span>ON
-D<span class="nv">OPENCV_DNN_CUDA</span><span class="o">=</span>ON
-D<span class="nv">CUDA_ARCH_BIN</span><span class="o">=</span>6.1
-D<span class="nv">WITH_INF_ENGINE</span><span class="o">=</span>ON
-D<span class="nv">ENABLE_CXX11</span><span class="o">=</span>ON
-D<span class="nv">INTEL_CVSDK_DIR</span><span class="o">=</span>/home/sn0w/intel/openvino_2020.1.023/deployment_tools
-D<span class="nv">IE_PLUGINS_PATH</span><span class="o">=</span>/home/sn0w/intel/openvino_2020.1.023/deployment_tools/inference_engine/lib/intel64/
-D<span class="nv">INF_ENGINE_RELEASE</span><span class="o">=</span><span class="m">2020010000</span>
-D<span class="nv">OPENCV_GENERATE_PKGCONFIG</span><span class="o">=</span>ON
-D<span class="nv">BUILD_EXAMPLES</span><span class="o">=</span>ON ..</code></pre></td></tr></table></div></div><p><strong>如果你只是想编译静态库，只需要在Cmake时附加<code> -D BUILD_SHARED_LIBS=OFF</code></strong></p><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span><span class="lnt">2</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-shell" data-lang="shell">$ cmake -D<span class="nv">CMAKE_BUILD_TYPE</span><span class="o">=</span>RELEASE -D<span class="nv">CMAKE_C_COMPILER</span><span class="o">=</span>/usr/bin/gcc -D<span class="nv">CMAKE_INSTALL_PREFIX</span><span class="o">=</span>/usr/local -D<span class="nv">INSTALL_PYTHON_EXAMPLES</span><span class="o">=</span>ON -D<span class="nv">INSTALL_C_EXAMPLES</span><span class="o">=</span>OFF -D<span class="nv">WITH_TBB</span><span class="o">=</span>ON -D<span class="nv">WITH_CUDA</span><span class="o">=</span>ON -D<span class="nv">BUILD_opencv_cudacodec</span><span class="o">=</span>OFF -D<span class="nv">ENABLE_FAST_MATH</span><span class="o">=</span><span class="m">1</span> -D<span class="nv">CUDA_FAST_MATH</span><span class="o">=</span><span class="m">1</span> -D<span class="nv">WITH_CUBLAS</span><span class="o">=</span><span class="m">1</span> -D<span class="nv">WITH_V4L</span><span class="o">=</span>ON -D<span class="nv">WITH_QT</span><span class="o">=</span>OFF -D<span class="nv">WITH_OPENGL</span><span class="o">=</span>ON -D<span class="nv">WITH_GSTREAMER</span><span class="o">=</span>ON -D<span class="nv">OPENCV_GENERATE_PKGCONFIG</span><span class="o">=</span>ON -D<span class="nv">OPENCV_PC_FILE_NAME</span><span class="o">=</span>opencv.pc -D<span class="nv">OPENCV_ENABLE_NONFREE</span><span class="o">=</span>ON -D<span class="nv">OPENCV_PYTHON3_INSTALL_PATH</span><span class="o">=</span>~/.virtualenvs/cv/lib/python3.6/site-packages -D<span class="nv">OPENCV_EXTRA_MODULES_PATH</span><span class="o">=</span>~／installcv/opencv_contrib-4.2.0/modules -D<span class="nv">PYTHON_EXECUTABLE</span><span class="o">=</span>~/.virtualenvs/cv/bin/python -D<span class="nv">BUILD_EXAMPLES</span><span class="o">=</span>ON -D<span class="nv">BUILD_SHARED_LIBS</span><span class="o">=</span>OFF ..</code></pre></td></tr></table></div></div><p><strong>如果你不想包括CUDA，只需要设置<code>-D WITH_CUDA=OFF</code></strong></p><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span><span class="lnt">2</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-shell" data-lang="shell">$ cmake -D<span class="nv">CMAKE_BUILD_TYPE</span><span class="o">=</span>RELEASE -D<span class="nv">CMAKE_C_COMPILER</span><span class="o">=</span>/usr/bin/gcc-6 -D<span class="nv">CMAKE_INSTALL_PREFIX</span><span class="o">=</span>/home/<span class="o">{</span>youraccount<span class="o">}</span>/opencv -D<span class="nv">INSTALL_PYTHON_EXAMPLES</span><span class="o">=</span>ON -D<span class="nv">INSTALL_C_EXAMPLES</span><span class="o">=</span>OFF -D<span class="nv">WITH_TBB</span><span class="o">=</span>ON -D<span class="nv">WITH_CUDA</span><span class="o">=</span>OFF -D<span class="nv">BUILD_opencv_cudacodec</span><span class="o">=</span>OFF -D<span class="nv">ENABLE_FAST_MATH</span><span class="o">=</span><span class="m">1</span> -D<span class="nv">CUDA_FAST_MATH</span><span class="o">=</span><span class="m">1</span> -D<span class="nv">WITH_CUBLAS</span><span class="o">=</span><span class="m">1</span> -D<span class="nv">WITH_V4L</span><span class="o">=</span>ON -D<span class="nv">WITH_QT</span><span class="o">=</span>OFF -D<span class="nv">WITH_OPENGL</span><span class="o">=</span>ON -D<span class="nv">WITH_GSTREAMER</span><span class="o">=</span>ON -D<span class="nv">OPENCV_GENERATE_PKGCONFIG</span><span class="o">=</span>ON -D<span class="nv">OPENCV_PC_FILE_NAME</span><span class="o">=</span>opencv.pc -D<span class="nv">OPENCV_ENABLE_NONFREE</span><span class="o">=</span>ON -D<span class="nv">OPENCV_PYTHON3_INSTALL_PATH</span><span class="o">=</span>~/.virtualenvs/cv/lib/python3.6/site-packages -D<span class="nv">OPENCV_EXTRA_MODULES_PATH</span><span class="o">=</span>~/installcv1/opencv_contrib-4.2.0/modules -D<span class="nv">PYTHON_EXECUTABLE</span><span class="o">=</span>~/.virtualenvs/cv/bin/python -D<span class="nv">BUILD_EXAMPLES</span><span class="o">=</span>ON ..</code></pre></td></tr></table></div></div><p><strong>如果你想使用CUDNN，你必须在Cmake时包含这些标记（正确的设置CUDA_ARCH_BIN的值)</strong></p><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span><span class="lnt">2</span><span class="lnt">3</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-shell" data-lang="shell">-D<span class="nv">WITH_CUDNN</span><span class="o">=</span>ON<span class="se">\</span><span class="se"/>-D<span class="nv">OPENCV_DNN_CUDA</span><span class="o">=</span>ON<span class="se">\</span><span class="se"/>-D<span class="nv">CUDA_ARCH_BIN</span><span class="o">=</span>6.1<span class="se">\</span></code></pre></td></tr></table></div></div><p>在<a href="https://developer.nvidia.com/cuda-gpus" target="_blank" rel="noopener noreffer">https://developer.nvidia.com/cuda-gpus</a>
网站上可以看到自己网卡可兼容的CUDA版本情况．</p><p><strong>正式编译前，你必须检查CUDA在Cmake输出时是否启用</strong></p><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span><span class="lnt">2</span><span class="lnt">3</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-fallback" data-lang="fallback">-- NVIDIA CUDA: YES (ver 10.0, CUFFT CUBLAS NVCUVID FAST_MATH)
-- NVIDIA GPU arch: 30 35 37 50 52 60 61 70 75
-- NVIDIA PTX archs:</code></pre></td></tr></table></div></div><p><strong>正式编译和安装</strong></p><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span><span class="lnt">2</span><span class="lnt">3</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-shell" data-lang="shell">$ nproc
$ make -j8<span class="c1">#！ubuntu 18.04编译过程中出现错误：sudo ln -s /usr/include/eigen3/Eigen /usr/include/Eigen</span>
$ sudo make install</code></pre></td></tr></table></div></div><p><strong>配置环境变量</strong></p><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span><span class="lnt">2</span><span class="lnt">3</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-shell" data-lang="shell">$ sudo /bin/bash -c<span class="s1">'echo "/usr/local/lib" >> /etc/ld.so.conf.d/opencv.conf'</span>
$ sudo ldconfig
$</code></pre></td></tr></table></div></div><p><strong>如果你想让python的cv包能够在系统环境下使用，必须要下面的复制工作</strong></p><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt"> 1</span><span class="lnt"> 2</span><span class="lnt"> 3</span><span class="lnt"> 4</span><span class="lnt"> 5</span><span class="lnt"> 6</span><span class="lnt"> 7</span><span class="lnt"> 8</span><span class="lnt"> 9</span><span class="lnt">10</span><span class="lnt">11</span><span class="lnt">12</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-shell" data-lang="shell">$ sudo cp -r ~/.virtualenvs/cv/lib/python3.6/site-packages/cv2 /usr/local/lib/python3.6/dist-packages
$<span class="nb">export</span><span class="nv">LD_LIBRARY_PATH</span><span class="o">=</span>/home/<span class="o">{</span>youraccount<span class="o">}</span>/ev_sdk/lib:/home/<span class="o">{</span>youraccount<span class="o">}</span>/opencv/lib:/usr/local/lib:/usr/local/cuda-10.0/lib64<span class="si">${</span><span class="nv">LD_LIBRARY_PATH</span><span class="p">:+:</span><span class="si">${</span><span class="nv">LD_LIBRARY_PATH</span><span class="si">}}</span>
$<span class="nb">export</span><span class="nv">OpenCV_DIR</span><span class="o">=</span>/home/<span class="o">{</span>youraccount<span class="o">}</span>/opencv
$<span class="nb">echo</span><span class="s2">"Modify config-3.6.py to point to the target directory"</span>
$ sudo nano /usr/local/lib/python3.6/dist-packages/cv2/config-3.6.py<span class="sb">```</span><span class="nv">PYTHON_EXTENSIONS_PATHS</span><span class="o">=</span><span class="o">[</span>
os.path.join<span class="o">(</span><span class="s1">'/usr/local/lib/python3.6/dist-packages/cv2'</span>,<span class="s1">'python-3.6'</span><span class="o">)</span><span class="o">]</span> + PYTHON_EXTENSIONS_PATHS<span class="sb">```</span></code></pre></td></tr></table></div></div><h2 id="测试安装">测试安装　　</h2><p>案例程序</p><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt"> 1</span><span class="lnt"> 2</span><span class="lnt"> 3</span><span class="lnt"> 4</span><span class="lnt"> 5</span><span class="lnt"> 6</span><span class="lnt"> 7</span><span class="lnt"> 8</span><span class="lnt"> 9</span><span class="lnt">10</span><span class="lnt">11</span><span class="lnt">12</span><span class="lnt">13</span><span class="lnt">14</span><span class="lnt">15</span><span class="lnt">16</span><span class="lnt">17</span><span class="lnt">18</span><span class="lnt">19</span><span class="lnt">20</span><span class="lnt">21</span><span class="lnt">22</span><span class="lnt">23</span><span class="lnt">24</span><span class="lnt">25</span><span class="lnt">26</span><span class="lnt">27</span><span class="lnt">28</span><span class="lnt">29</span><span class="lnt">30</span><span class="lnt">31</span><span class="lnt">32</span><span class="lnt">33</span><span class="lnt">34</span><span class="lnt">35</span><span class="lnt">36</span><span class="lnt">37</span><span class="lnt">38</span><span class="lnt">39</span><span class="lnt">40</span><span class="lnt">41</span><span class="lnt">42</span><span class="lnt">43</span><span class="lnt">44</span><span class="lnt">45</span><span class="lnt">46</span><span class="lnt">47</span><span class="lnt">48</span><span class="lnt">49</span><span class="lnt">50</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-cpp" data-lang="cpp"><span class="c1">//test.cpp</span><span class="c1"/><span class="cp">#include</span><span class="cpf">&lt;iostream></span><span class="cp"/><span class="cp">#include</span><span class="cpf">&lt;ctime></span><span class="cp"/><span class="cp">#include</span><span class="cpf">&lt;cmath></span><span class="cp"/><span class="cp">#include</span><span class="cpf">"bits/time.h"</span><span class="cp"/><span class="cp"/><span class="cp">#include</span><span class="cpf">&lt;opencv2/core.hpp></span><span class="cp"/><span class="cp">#include</span><span class="cpf">&lt;opencv2/highgui.hpp></span><span class="cp"/><span class="cp">#include</span><span class="cpf">&lt;opencv2/imgproc.hpp></span><span class="cp"/><span class="cp">#include</span><span class="cpf">&lt;opencv2/imgcodecs.hpp></span><span class="cp"/><span class="cp"/><span class="cp">#include</span><span class="cpf">&lt;opencv2/core/cuda.hpp></span><span class="cp"/><span class="cp">#include</span><span class="cpf">&lt;opencv2/cudaarithm.hpp></span><span class="cp"/><span class="cp">#include</span><span class="cpf">&lt;opencv2/cudaimgproc.hpp></span><span class="cp"/><span class="cp"/><span class="cp">#define TestCUDA true</span><span class="cp"/><span class="kt">int</span><span class="nf">main</span><span class="p">()</span><span class="p">{</span><span class="n">std</span><span class="o">::</span><span class="n">clock_t</span><span class="n">begin</span><span class="o">=</span><span class="n">std</span><span class="o">::</span><span class="n">clock</span><span class="p">();</span><span class="k">try</span><span class="p">{</span><span class="n">cv</span><span class="o">::</span><span class="n">String</span><span class="n">filename</span><span class="o">=</span><span class="s">"/home/raul/Pictures/Screenshot_20170317_105454.png"</span><span class="p">;</span><span class="n">cv</span><span class="o">::</span><span class="n">Mat</span><span class="n">srcHost</span><span class="o">=</span><span class="n">cv</span><span class="o">::</span><span class="n">imread</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="n">cv</span><span class="o">::</span><span class="n">IMREAD_GRAYSCALE</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kt">int</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">1000</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="n">TestCUDA</span><span class="p">)</span><span class="p">{</span><span class="n">cv</span><span class="o">::</span><span class="n">cuda</span><span class="o">::</span><span class="n">GpuMat</span><span class="n">dst</span><span class="p">,</span><span class="n">src</span><span class="p">;</span><span class="n">src</span><span class="p">.</span><span class="n">upload</span><span class="p">(</span><span class="n">srcHost</span><span class="p">);</span><span class="c1">//cv::cuda::threshold(src,dst,128.0,255.0, CV_THRESH_BINARY);</span><span class="c1"/><span class="n">cv</span><span class="o">::</span><span class="n">cuda</span><span class="o">::</span><span class="n">bilateralFilter</span><span class="p">(</span><span class="n">src</span><span class="p">,</span><span class="n">dst</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="n">cv</span><span class="o">::</span><span class="n">Mat</span><span class="n">resultHost</span><span class="p">;</span><span class="n">dst</span><span class="p">.</span><span class="n">download</span><span class="p">(</span><span class="n">resultHost</span><span class="p">);</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="n">cv</span><span class="o">::</span><span class="n">Mat</span><span class="n">dst</span><span class="p">;</span><span class="n">cv</span><span class="o">::</span><span class="n">bilateralFilter</span><span class="p">(</span><span class="n">srcHost</span><span class="p">,</span><span class="n">dst</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="p">}</span><span class="p">}</span><span class="c1">//cv::imshow("Result",resultHost);</span><span class="c1"/><span class="c1">//cv::waitKey();</span><span class="c1"/><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="k">const</span><span class="n">cv</span><span class="o">::</span><span class="n">Exception</span><span class="o">&amp;</span><span class="n">ex</span><span class="p">)</span><span class="p">{</span><span class="n">std</span><span class="o">::</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">"Error: "</span><span class="o">&lt;&lt;</span><span class="n">ex</span><span class="p">.</span><span class="n">what</span><span class="p">()</span><span class="o">&lt;&lt;</span><span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span><span class="p">}</span><span class="n">std</span><span class="o">::</span><span class="n">clock_t</span><span class="n">end</span><span class="o">=</span><span class="n">std</span><span class="o">::</span><span class="n">clock</span><span class="p">();</span><span class="n">std</span><span class="o">::</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="kt">double</span><span class="p">(</span><span class="n">end</span><span class="o">-</span><span class="n">begin</span><span class="p">)</span><span class="o">/</span><span class="n">CLOCKS_PER_SEC</span><span class="o">&lt;&lt;</span><span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span><span class="p">}</span></code></pre></td></tr></table></div></div><p><strong>编译和执行</strong></p><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span><span class="lnt">2</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-fallback" data-lang="fallback">$ g++ -o test test.cpp `pkg-config opencv --cflags --libs`
$ ./test</code></pre></td></tr></table></div></div><h2 id="faq">FAQ</h2><p>编译过程中如果出现如下错误，说明显卡不支持CUDA的最低要求</p><div class="highlight"><div class="chroma"><table class="lntable"><tr><td class="lntd"><pre class="chroma"><code><span class="lnt">1</span></code></pre></td><td class="lntd"><pre class="chroma"><code class="language-fallback" data-lang="fallback">CUDA backend for DNN module requires CC 5.3 or higher. Please remove unsupported architectures from CUDA_ARCH_BIN option.</code></pre></td></tr></table></div></div><h2 id="安装或者编译错误">安装或者编译错误　　</h2><p>opencv_contrib-4.1.1/modules/cudaimgproc/src/cuda/bilateral_filter.cu:140: error: (-217:Gpu API call) invalid configuration argument in function &lsquo;bilateral_caller&rsquo;</p><p>cmake项目编译出现undefined reference to `cv::freetype::createFreeType2()　　</p><p><strong>参考</strong><br><a href="https://medium.com/repro-repo/install-cuda-10-1-and-cudnn-7-5-0-for-pytorch-on-ubuntu-18-04-lts-9b6124c44cc" target="_blank" rel="noopener noreffer">https://medium.com/repro-repo/install-cuda-10-1-and-cudnn-7-5-0-for-pytorch-on-ubuntu-18-04-lts-9b6124c44cc</a><br><a href="https://gist.github.com/raulqf/f42c718a658cddc16f9df07ecc627be7" target="_blank" rel="noopener noreffer">https://gist.github.com/raulqf/f42c718a658cddc16f9df07ecc627be7</a></p></description></item></channel></rss>